{"ast":null,"code":"import { CartItem } from 'src/app/cart-item';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/_services/product.service\";\nimport * as i2 from \"src/app/_services/cart.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@ng-bootstrap/ng-bootstrap\";\n\nfunction ProductListComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"div\", 16)(2, \"a\", 17);\n    i0.ɵɵelement(3, \"img\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"a\", 17)(5, \"h1\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 19);\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function ProductListComponent_div_4_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const tempProduct_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.addToCart(tempProduct_r3));\n    });\n    i0.ɵɵtext(11, \"Add to cart\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const tempProduct_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/products/\", tempProduct_r3.id, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", tempProduct_r3.imageUrl, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/products/\", tempProduct_r3.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tempProduct_r3.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(9, 5, tempProduct_r3.unitPrice, \"USD\"));\n  }\n}\n\nfunction ProductListComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtext(1, \" No products found. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let ProductListComponent = /*#__PURE__*/(() => {\n  class ProductListComponent {\n    constructor(productService, cartService, route) {\n      this.productService = productService;\n      this.cartService = cartService;\n      this.route = route;\n      this.products = [];\n      this.currentCategoryId = 1;\n      this.previousCategoryId = 1;\n      this.searchMode = false; // new properties for pagination\n\n      this.thePageNumber = 1;\n      this.thePageSize = 5;\n      this.theTotalElements = 0;\n      this.previousKeyword = '';\n    }\n\n    ngOnInit() {\n      // this.route.paramMap.subscribe(() => {\n      //   this.listProducts();\n      // });\n      this.productService.getAllProducts();\n      console.log();\n    }\n\n    listProducts() {\n      this.searchMode = this.route.snapshot.paramMap.has('keyword');\n\n      if (this.searchMode) {\n        this.handleSearchProducts();\n      } else {\n        this.handleListProducts();\n      }\n    }\n\n    handleSearchProducts() {\n      const theKeyword = this.route.snapshot.paramMap.get('keyword'); // if we have a different keyword than previous\n      // then set thePageNumber to 1\n\n      if (this.previousKeyword != theKeyword) {\n        this.thePageNumber = 1;\n      }\n\n      this.previousKeyword = theKeyword;\n      console.log(`keyword=${theKeyword}, thePageNumber=${this.thePageNumber}`); // now search for the products using keyword\n\n      this.productService.searchProductsPaginate(this.thePageNumber - 1, this.thePageSize, theKeyword).subscribe(this.processResult());\n    }\n\n    handleListProducts() {\n      // check if \"id\" parameter is available\n      const hasCategoryId = this.route.snapshot.paramMap.has('id');\n      console.log(this.route.snapshot.paramMap.has('id'));\n      console.log(hasCategoryId);\n\n      if (hasCategoryId) {\n        // get the \"id\" param string. convert string to a number using the \"+\" symbol\n        this.currentCategoryId = +this.route.snapshot.paramMap.get('id');\n      } else {\n        // not category id available ... default to category id 1\n        this.currentCategoryId = 1;\n      } //\n      // Check if we have a different category than previous\n      // Note: Angular will reuse a component if it is currently being viewed\n      //\n      // if we have a different category id than previous\n      // then set thePageNumber back to 1\n\n\n      if (this.previousCategoryId != this.currentCategoryId) {\n        this.thePageNumber = 1;\n      }\n\n      this.previousCategoryId = this.currentCategoryId;\n      console.log(`currentCategoryId=${this.currentCategoryId}, thePageNumber=${this.thePageNumber}`); // now get the products for the given category id\n\n      this.productService.getProductListPaginate(this.thePageNumber - 1, this.thePageSize, this.currentCategoryId).subscribe(this.processResult());\n    }\n\n    updatePageSize(pageSize) {\n      this.thePageSize = +pageSize;\n      this.thePageNumber = 1;\n      this.listProducts();\n    }\n\n    processResult() {\n      return data => {\n        this.products = data._embedded.products;\n        this.thePageNumber = data.page.number + 1;\n        this.thePageSize = data.page.size;\n        this.theTotalElements = data.page.totalElements;\n      };\n    }\n\n    addToCart(theProduct) {\n      console.log(`Adding to cart: ${theProduct.name}, ${theProduct.unitPrice}`); // TODO ... do the real work\n\n      let theCartItem = new CartItem(theProduct.id, theProduct.name, theProduct.imageUrl, theProduct.unitPrice);\n      this.cartService.addToCart(theCartItem);\n    }\n\n  }\n\n  ProductListComponent.ɵfac = function ProductListComponent_Factory(t) {\n    return new (t || ProductListComponent)(i0.ɵɵdirectiveInject(i1.ProductService), i0.ɵɵdirectiveInject(i2.CartService), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n  };\n\n  ProductListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProductListComponent,\n    selectors: [[\"app-product-list\"]],\n    decls: 28,\n    vars: 7,\n    consts: [[1, \"main-content\"], [1, \"section-content\", \"section-content-p30\"], [1, \"container-fluid\"], [1, \"row\"], [\"class\", \"col-md-3\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"alert alert-warning col-md-12\", \"role\", \"alert\", 4, \"ngIf\"], [1, \"footer-pagination\"], [1, \"col-md-6\"], [1, \"col-md-9\", 2, \"padding-left\", \"30%\"], [3, \"page\", \"pageSize\", \"collectionSize\", \"maxSize\", \"boundaryLinks\", \"pageChange\"], [1, \"col-md-3\", \"mt-2\", 2, \"text-align\", \"right\"], [1, \"mr-2\"], [3, \"change\"], [\"myPageSelect\", \"\"], [\"selected\", \"true\"], [1, \"col-md-3\"], [1, \"product-box\"], [3, \"routerLink\"], [1, \"img-responsive\", 3, \"src\"], [1, \"price\"], [1, \"btn\", \"btn-primary\", \"btn-sm\", 3, \"click\"], [\"role\", \"alert\", 1, \"alert\", \"alert-warning\", \"col-md-12\"]],\n    template: function ProductListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r6 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n        i0.ɵɵtemplate(4, ProductListComponent_div_4_Template, 12, 8, \"div\", 4);\n        i0.ɵɵtemplate(5, ProductListComponent_div_5_Template, 2, 0, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 6)(7, \"div\", 3);\n        i0.ɵɵelement(8, \"div\", 7);\n        i0.ɵɵelementStart(9, \"div\", 7)(10, \"div\", 3)(11, \"div\", 8)(12, \"ngb-pagination\", 9);\n        i0.ɵɵlistener(\"pageChange\", function ProductListComponent_Template_ngb_pagination_pageChange_12_listener($event) {\n          return ctx.thePageNumber = $event;\n        })(\"pageChange\", function ProductListComponent_Template_ngb_pagination_pageChange_12_listener() {\n          return ctx.listProducts();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 10)(14, \"span\", 11);\n        i0.ɵɵtext(15, \"Page Size\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"select\", 12, 13);\n        i0.ɵɵlistener(\"change\", function ProductListComponent_Template_select_change_16_listener() {\n          i0.ɵɵrestoreView(_r6);\n\n          const _r2 = i0.ɵɵreference(17);\n\n          return i0.ɵɵresetView(ctx.updatePageSize(_r2.value));\n        });\n        i0.ɵɵelementStart(18, \"option\");\n        i0.ɵɵtext(19, \"2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"option\", 14);\n        i0.ɵɵtext(21, \"5\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"option\");\n        i0.ɵɵtext(23, \"10\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"option\");\n        i0.ɵɵtext(25, \"20\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"option\");\n        i0.ɵɵtext(27, \"50\");\n        i0.ɵɵelementEnd()()()()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.products);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.products == null ? null : ctx.products.length) == 0);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"page\", ctx.thePageNumber)(\"pageSize\", ctx.thePageSize)(\"collectionSize\", ctx.theTotalElements)(\"maxSize\", 5)(\"boundaryLinks\", true);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i3.RouterLinkWithHref, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i6.NgbPagination, i4.CurrencyPipe]\n  });\n  return ProductListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}