{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { CartItem } from 'src/app/cart-item';\nlet ProductListComponent = class ProductListComponent {\n  constructor(productService, cartService, route) {\n    this.productService = productService;\n    this.cartService = cartService;\n    this.route = route;\n    this.currentCategoryId = 1;\n    this.previousCategoryId = 1;\n    this.searchMode = false; // new properties for pagination\n\n    this.thePageNumber = 1;\n    this.thePageSize = 5;\n    this.theTotalElements = 0;\n    this.previousKeyword = '';\n  }\n\n  ngOnInit() {\n    // this.route.paramMap.subscribe(() => {\n    //   this.products = this.listProducts();\n    // });\n    this.products = this.productService.getAllProducts();\n  }\n\n  listProducts() {\n    this.searchMode = this.route.snapshot.paramMap.has('keyword');\n\n    if (this.searchMode) {\n      this.handleSearchProducts();\n    } else {\n      this.handleListProducts();\n    }\n  }\n\n  handleSearchProducts() {\n    const theKeyword = this.route.snapshot.paramMap.get('keyword');\n\n    if (this.previousKeyword != theKeyword) {\n      this.thePageNumber = 1;\n    }\n\n    this.previousKeyword = theKeyword;\n    this.productService.searchProductsPaginate(this.thePageNumber - 1, this.thePageSize, theKeyword).subscribe(this.processResult());\n  }\n\n  handleListProducts() {\n    const hasCategoryId = this.route.snapshot.paramMap.has('id');\n\n    if (hasCategoryId) {\n      this.currentCategoryId = +this.route.snapshot.paramMap.get('id');\n    } else {\n      this.currentCategoryId = 1;\n    }\n\n    if (this.previousCategoryId != this.currentCategoryId) {\n      this.thePageNumber = 1;\n    }\n\n    this.previousCategoryId = this.currentCategoryId;\n    this.productService.getProductListPaginate(this.thePageNumber - 1, this.thePageSize, this.currentCategoryId).subscribe(this.processResult());\n  }\n\n  updatePageSize(pageSize) {\n    this.thePageSize = +pageSize;\n    this.thePageNumber = 1;\n    this.listProducts();\n  }\n\n  processResult() {\n    return data => {\n      this.products = data._embedded.products;\n      this.thePageNumber = data.page.number + 1;\n      this.thePageSize = data.page.size;\n      this.theTotalElements = data.page.totalElements;\n    };\n  }\n\n  addToCart(theProduct) {\n    console.log(`Adding to cart: ${theProduct.name}, ${theProduct.unitPrice}`); //add user details? or do when creating cart-> check localstorag for user\n\n    let theCartItem = new CartItem(theProduct.id, theProduct.name, theProduct.imageUrl, theProduct.unitPrice);\n    this.cartService.addToCart(theCartItem);\n  }\n\n};\nProductListComponent = __decorate([Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list-grid.component.html',\n  styleUrls: ['./product-list.component.css']\n})], ProductListComponent);\nexport { ProductListComponent };","map":null,"metadata":{},"sourceType":"module"}