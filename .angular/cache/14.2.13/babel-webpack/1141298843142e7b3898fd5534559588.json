{"ast":null,"code":"import { CartItem } from 'src/app/cart-item';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/_services/product.service\";\nimport * as i2 from \"src/app/cart.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common/http\";\nexport let ProductListComponent = /*#__PURE__*/(() => {\n  class ProductListComponent {\n    constructor(productService, cartService, route, httpClient) {\n      this.productService = productService;\n      this.cartService = cartService;\n      this.route = route;\n      this.httpClient = httpClient;\n      this.products = [];\n      this.currentCategoryId = 1;\n      this.previousCategoryId = 1;\n      this.searchMode = false; // new properties for pagination\n\n      this.thePageNumber = 1;\n      this.thePageSize = 5;\n      this.theTotalElements = 0;\n      this.previousKeyword = '';\n    }\n\n    ngOnInit() {\n      return this.httpClient.get('http://localhost:9090/products');\n      this.route.paramMap.subscribe(() => {\n        this.listProducts();\n      });\n    }\n\n    listProducts() {\n      this.searchMode = this.route.snapshot.paramMap.has('keyword');\n\n      if (this.searchMode) {\n        this.handleSearchProducts();\n      } else {\n        this.handleListProducts();\n      }\n    }\n\n    handleSearchProducts() {\n      const theKeyword = this.route.snapshot.paramMap.get('keyword'); // if we have a different keyword than previous\n      // then set thePageNumber to 1\n\n      if (this.previousKeyword != theKeyword) {\n        this.thePageNumber = 1;\n      }\n\n      this.previousKeyword = theKeyword;\n      console.log(`keyword=${theKeyword}, thePageNumber=${this.thePageNumber}`); // now search for the products using keyword\n\n      this.productService.searchProductsPaginate(this.thePageNumber - 1, this.thePageSize, theKeyword).subscribe(this.processResult());\n    }\n\n    handleListProducts() {\n      // check if \"id\" parameter is available\n      const hasCategoryId = this.route.snapshot.paramMap.has('id');\n\n      if (hasCategoryId) {\n        // get the \"id\" param string. convert string to a number using the \"+\" symbol\n        this.currentCategoryId = +this.route.snapshot.paramMap.get('id');\n      } else {\n        // not category id available ... default to category id 1\n        this.currentCategoryId = 1;\n      } //\n      // Check if we have a different category than previous\n      // Note: Angular will reuse a component if it is currently being viewed\n      //\n      // if we have a different category id than previous\n      // then set thePageNumber back to 1\n\n\n      if (this.previousCategoryId != this.currentCategoryId) {\n        this.thePageNumber = 1;\n      }\n\n      this.previousCategoryId = this.currentCategoryId;\n      console.log(`currentCategoryId=${this.currentCategoryId}, thePageNumber=${this.thePageNumber}`); // now get the products for the given category id\n\n      this.productService.getProductListPaginate(this.thePageNumber - 1, this.thePageSize, this.currentCategoryId).subscribe(this.processResult());\n    }\n\n    updatePageSize(pageSize) {\n      this.thePageSize = +pageSize;\n      this.thePageNumber = 1;\n      this.listProducts();\n    }\n\n    processResult() {\n      return data => {\n        this.products = data._embedded.products;\n        this.thePageNumber = data.page.number + 1;\n        this.thePageSize = data.page.size;\n        this.theTotalElements = data.page.totalElements;\n      };\n    }\n\n    addToCart(theProduct) {\n      console.log(`Adding to cart: ${theProduct.name}, ${theProduct.unitPrice}`); // TODO ... do the real work\n\n      let theCartItem = new CartItem(theProduct.id, theProduct.name, theProduct.imageUrl, theProduct.unitPrice);\n      this.cartService.addToCart(theCartItem);\n    }\n\n  }\n\n  ProductListComponent.ɵfac = function ProductListComponent_Factory(t) {\n    return new (t || ProductListComponent)(i0.ɵɵdirectiveInject(i1.ProductService), i0.ɵɵdirectiveInject(i2.CartService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.HttpClient));\n  };\n\n  ProductListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProductListComponent,\n    selectors: [[\"app-product-list\"]],\n    decls: 0,\n    vars: 0,\n    template: function ProductListComponent_Template(rf, ctx) {}\n  });\n  return ProductListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}