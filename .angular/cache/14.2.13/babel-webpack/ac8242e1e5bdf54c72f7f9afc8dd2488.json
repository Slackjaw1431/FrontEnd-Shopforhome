{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../_services/orders.service\";\nimport * as i3 from \"@angular/common\";\n\nfunction ViewOrdersComponent_tr_15_li_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"strong\");\n    i0.ɵɵtext(2, \"Item ID:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementStart(4, \"strong\");\n    i0.ɵɵtext(5, \"Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6);\n    i0.ɵɵelementStart(7, \"strong\");\n    i0.ɵɵtext(8, \"Quantity:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9);\n    i0.ɵɵelementStart(10, \"strong\");\n    i0.ɵɵtext(11, \"Unit Price:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12);\n    i0.ɵɵelementStart(13, \"strong\");\n    i0.ɵɵtext(14, \"Product ID:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const orderItem_r3 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", orderItem_r3.orderItemId, \", \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", orderItem_r3.name, \", \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", orderItem_r3.quantity, \", \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", orderItem_r3.unitPrice, \", \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", orderItem_r3.productId, \" \");\n  }\n}\n\nfunction ViewOrdersComponent_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"ul\");\n    i0.ɵɵtemplate(9, ViewOrdersComponent_tr_15_li_9_Template, 16, 5, \"li\", 2);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const order_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r1.orderId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r1.userId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r1.dateCreated);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", order_r1.orderItems);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r1.total);\n  }\n}\n\nexport let ViewOrdersComponent = /*#__PURE__*/(() => {\n  class ViewOrdersComponent {\n    constructor(httpClient, ordersService) {\n      this.httpClient = httpClient;\n      this.ordersService = ordersService;\n      this.userName = 'user';\n      this.mappedOrders = [];\n    }\n\n    ngOnInit() {\n      // console.log(this.userName);\n      this.ordersService.getOrderForCurrentUser(this.userName).subscribe(response => {\n        // console.log(response);\n        this.orderObject = response;\n        this.allOrders = this.orderObject.content;\n        this.allOrders.forEach(order => {\n          // Extract order details\n          const mappedOrder = {\n            orderId: order.orderId,\n            dateCreated: order.dateCreated,\n            userId: order.userId,\n            total: order.total,\n            orderItems: []\n          };\n          order.orderItems.forEach(item => {\n            const mappedOrderItem = {\n              orderItemId: item.orderItemId,\n              quantity: item.quantity,\n              name: item.name,\n              unitPrice: item.unitPrice,\n              productId: item.productId\n            };\n            mappedOrder.orderItems.push(mappedOrderItem); // console.log(mappedOrder);\n          }, error => {\n            console.log(error);\n          });\n        });\n        console.log(this.mappedOrders);\n      });\n    }\n\n  }\n\n  ViewOrdersComponent.ɵfac = function ViewOrdersComponent_Factory(t) {\n    return new (t || ViewOrdersComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.OrdersService));\n  };\n\n  ViewOrdersComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ViewOrdersComponent,\n    selectors: [[\"app-view-orders\"]],\n    decls: 16,\n    vars: 1,\n    consts: [[1, \"container\"], [1, \"table\", \"table-bordered\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function ViewOrdersComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"table\", 1)(2, \"thead\")(3, \"tr\")(4, \"th\");\n        i0.ɵɵtext(5, \"Order ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"th\");\n        i0.ɵɵtext(7, \"User ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"th\");\n        i0.ɵɵtext(9, \"Date Created\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"th\");\n        i0.ɵɵtext(11, \"Products\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"th\");\n        i0.ɵɵtext(13, \"Total\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(14, \"tbody\");\n        i0.ɵɵtemplate(15, ViewOrdersComponent_tr_15_Template, 12, 5, \"tr\", 2);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngForOf\", ctx.mappedOrders);\n      }\n    },\n    dependencies: [i3.NgForOf]\n  });\n  return ViewOrdersComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}